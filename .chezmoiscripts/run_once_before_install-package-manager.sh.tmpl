#!/bin/bash

set -e

{{ if eq .chezmoi.os "darwin" -}}
#################
# macOS - Homebrew
#################

# Check if Homebrew is installed
if command -v brew >/dev/null 2>&1; then
    echo "✅ Homebrew is already installed at $(command -v brew)"
else
    echo "🚀 Homebrew not found. Installing..."
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    # Add Homebrew to PATH depending on architecture
    if [[ -d "/opt/homebrew/bin" ]]; then
        echo 'export PATH="/opt/homebrew/bin:$PATH"' >> ~/.bash_profile
        export PATH="/opt/homebrew/bin:$PATH"
    elif [[ -d "/usr/local/bin" ]]; then
        echo 'export PATH="/usr/local/bin:$PATH"' >> ~/.bash_profile
        export PATH="/usr/local/bin:$PATH"
    fi

    echo "✅ Homebrew installation complete."
fi

#################
# Fish Shell
#################
if command -v fish >/dev/null 2>&1; then
    echo "✅ Fish shell is already installed at $(command -v fish)"
else
    echo "🚀 Fish shell not found. Installing..."
    brew install fish
    echo "Your password may be required to enable the Fish shell..."
    sudo sh -c "echo /opt/homebrew/bin/fish >> /etc/shells"
    chsh -s /opt/homebrew/bin/fish
fi

{{ else if eq .chezmoi.os "linux" -}}
#################
# Linux - APT
#################

echo "🐧 Setting up Linux environment..."

# Update package lists
echo "📦 Updating package lists..."
sudo apt update

#################
# Install required packages for PPA management
#################
echo "📦 Installing software-properties-common..."
sudo apt install -y software-properties-common

#################
# Fish Shell
#################
if command -v fish >/dev/null 2>&1; then
    echo "✅ Fish shell is already installed at $(command -v fish)"
else
    echo "🚀 Installing Fish shell..."
    # Add Fish shell PPA for latest version
    sudo apt-add-repository ppa:fish-shell/release-3 -y
    sudo apt update
    sudo apt install fish -y

    # Set Fish as default shell
    echo "🐚 Setting Fish as default shell..."
    if ! grep -q "$(which fish)" /etc/shells; then
        echo "$(which fish)" | sudo tee -a /etc/shells
    fi
    chsh -s "$(which fish)"
    echo "✅ Fish shell installation complete."
fi

#################
# Essential tools (via curl installers)
#################
echo "🔧 Installing essential tools via curl installers..."

# Starship prompt
if ! command -v starship >/dev/null 2>&1; then
    echo "🚀 Installing Starship prompt..."
    curl -sS https://starship.rs/install.sh | sh -s -- -y
fi

# uv (Python package manager)
if ! command -v uv >/dev/null 2>&1; then
    echo "📦 Installing uv..."
    curl -LsSf https://astral.sh/uv/install.sh | sh
fi

#################
# eza (better ls)
#################
if ! command -v eza >/dev/null 2>&1; then
    echo "📦 Installing eza..."
    wget -c https://github.com/eza-community/eza/releases/latest/download/eza_x86_64-unknown-linux-gnu.tar.gz -O - | tar xz
    sudo chmod +x eza
    sudo chown root:root eza
    sudo mv eza /usr/local/bin/eza
    echo "✅ eza installed"
fi

#################
# git-delta (better git diff)
#################
if ! command -v delta >/dev/null 2>&1; then
    echo "📦 Installing git-delta..."
    DELTA_VERSION=$(curl -s https://api.github.com/repos/dandavison/delta/releases/latest | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
    wget "https://github.com/dandavison/delta/releases/download/${DELTA_VERSION}/git-delta_${DELTA_VERSION}_amd64.deb" -O /tmp/git-delta.deb
    sudo dpkg -i /tmp/git-delta.deb
    rm /tmp/git-delta.deb
fi

#################
# lazygit (git TUI)
#################
if ! command -v lazygit >/dev/null 2>&1; then
    echo "📦 Installing lazygit..."
    LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
    wget "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz" -O /tmp/lazygit.tar.gz
    tar -xzf /tmp/lazygit.tar.gz -C /tmp
    sudo mv /tmp/lazygit /usr/local/bin/
    sudo chmod +x /usr/local/bin/lazygit
    rm /tmp/lazygit.tar.gz
fi

#################
# zellij (terminal multiplexer)
#################
if ! command -v zellij >/dev/null 2>&1; then
    echo "📦 Installing zellij..."
    # Install via direct download
    ZELLIJ_VERSION=$(curl -s https://api.github.com/repos/zellij-org/zellij/releases/latest | grep '"tag_name"' | sed -E 's/.*"([^"]+)".*/\1/')
    wget "https://github.com/zellij-org/zellij/releases/download/${ZELLIJ_VERSION}/zellij-x86_64-unknown-linux-musl.tar.gz" -O /tmp/zellij.tar.gz
    tar -xzf /tmp/zellij.tar.gz -C /tmp
    sudo mv /tmp/zellij /usr/local/bin/
    sudo chmod +x /usr/local/bin/zellij
    rm /tmp/zellij.tar.gz
fi

#################
# Create symlinks for renamed commands
#################
echo "🔗 Creating symlinks for commands with different names on Ubuntu..."

mkdir -p "$HOME/.local/bin"

# bat -> batcat
if command -v batcat >/dev/null 2>&1 && ! command -v bat >/dev/null 2>&1; then
    ln -sf "$(which batcat)" "$HOME/.local/bin/bat"
fi

# fd -> fdfind
if command -v fdfind >/dev/null 2>&1 && ! command -v fd >/dev/null 2>&1; then
    ln -sf "$(which fdfind)" "$HOME/.local/bin/fd"
fi

echo "✅ Linux setup complete."

{{ end -}}
