#!/bin/bash

set -e

{{ if eq .chezmoi.os "linux" -}}
#################
# AI & ML CLI Tools for Ubuntu
#################

echo "🤖 Installing AI and ML CLI tools..."

#################
# GitHub CLI
#################
if ! command -v gh >/dev/null 2>&1; then
    echo "📦 Installing GitHub CLI..."
    # Add GitHub CLI repository
    type -p curl >/dev/null || sudo apt install curl -y
    curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
    sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
    sudo apt update
    sudo apt install gh -y
    echo "✅ GitHub CLI installed"
else
    echo "✅ GitHub CLI is already installed"
fi

#################
# Hugging Face CLI (via uv tool)
#################
if ! command -v hf >/dev/null 2>&1; then
    echo "📦 Installing Hugging Face CLI..."
    uv tool install huggingface-hub
    echo "✅ Hugging Face CLI installed"
else
    echo "✅ Hugging Face CLI is already installed"
fi

#################
# wandb (via uv tool)
#################
if ! command -v wandb >/dev/null 2>&1; then
    echo "📦 Installing wandb..."
    uv tool install wandb
    echo "✅ wandb installed"
else
    echo "✅ wandb is already installed"
fi

#################
# Install fnm and Node.js LTS (required for Claude Code and Codex)
#################
# Install fnm if not present
if ! command -v fnm >/dev/null 2>&1; then
    echo "📦 Installing fnm (Fast Node Manager)..."

    # Try curl installer first
    FNM_INSTALLED=false
    if curl -fsSL --connect-timeout 10 --max-time 30 https://fnm.vercel.app/install | bash -s -- --skip-shell 2>&1; then
        export PATH="$HOME/.local/share/fnm:$PATH"
        if command -v fnm >/dev/null 2>&1; then
            echo "✅ fnm installed via curl"
            FNM_INSTALLED=true
        fi
    fi

    # If curl failed, use GitHub as fallback
    if [ "$FNM_INSTALLED" = false ]; then
        echo "⚠️  curl installation failed. Using GitHub release..."
        FNM_VERSION="v1.37.2"
        FNM_URL="https://github.com/Schniz/fnm/releases/download/${FNM_VERSION}/fnm-linux.zip"

        mkdir -p "$HOME/.local/share/fnm"
        if curl -fsSL -o /tmp/fnm.zip "$FNM_URL" && \
           unzip -o /tmp/fnm.zip -d /tmp && \
           mv /tmp/fnm "$HOME/.local/share/fnm/" && \
           chmod +x "$HOME/.local/share/fnm/fnm" && \
           rm -f /tmp/fnm.zip; then
            export PATH="$HOME/.local/share/fnm:$PATH"
            if command -v fnm >/dev/null 2>&1; then
                echo "✅ fnm installed from GitHub release"
            else
                echo "❌ fnm installation failed."
                exit 1
            fi
        else
            echo "❌ Failed to download fnm from GitHub."
            exit 1
        fi
    fi
fi

# Install and configure Node.js LTS via fnm
echo "📦 Installing Node.js LTS via fnm..."

# Initialize fnm environment
export PATH="$HOME/.local/share/fnm:$PATH"
eval "$(fnm env --use-on-cd)"

# Install LTS version
fnm install --lts
fnm default lts-latest

# Get the actual fnm-managed node path
FNM_MULTISHELL_PATH="$(fnm env | grep 'FNM_MULTISHELL_PATH' | cut -d'=' -f2 | tr -d '"')"
if [ -n "$FNM_MULTISHELL_PATH" ]; then
    export PATH="$FNM_MULTISHELL_PATH/bin:$PATH"
fi

# Source fnm environment again to ensure PATH is updated
eval "$(fnm env)"

# Verify Node.js version
NODE_VERSION=$(node -v 2>/dev/null || echo "not found")
echo "✅ Node.js $NODE_VERSION ready"

# Warn if still using old version
if [[ "$NODE_VERSION" == v12* ]] || [[ "$NODE_VERSION" == "not found" ]]; then
    echo "⚠️  Warning: Node.js version is still old or not found."
    echo "   fnm path: $(which fnm)"
    echo "   node path: $(which node)"
    echo "   Please restart your shell or run: fnm env | source"
fi

#################
# Claude Code (via npm)
#################
if ! command -v claude >/dev/null 2>&1; then
    echo "📦 Installing Claude Code..."
    npm install -g @anthropic-ai/claude-code
    echo "✅ Claude Code installed"
else
    echo "✅ Claude Code is already installed"
fi

#################
# OpenAI Codex (via npm)
#################
if ! command -v codex >/dev/null 2>&1; then
    echo "📦 Installing OpenAI Codex..."
    npm install -g @openai/codex
    echo "✅ OpenAI Codex installed"
else
    echo "✅ OpenAI Codex is already installed"
fi

#################
# Authentication Instructions
#################
echo ""
echo "🔐 Authentication Setup"
echo "======================="
echo "Run these commands to authenticate:"
echo "  gh auth login                             # GitHub"
echo "  hf auth login                             # Hugging Face"
echo "  wandb login                               # Weights & Biases"
echo ""

{{ else if eq .chezmoi.os "darwin" -}}
#################
# AI & ML CLI Tools for macOS
#################

echo "🤖 Installing AI and ML CLI tools on macOS..."

# GitHub CLI
if ! command -v gh >/dev/null 2>&1; then
    echo "📦 Installing GitHub CLI..."
    brew install gh
else
    echo "✅ GitHub CLI is already installed"
fi

# Hugging Face CLI (via uv tool)
if ! command -v hf >/dev/null 2>&1; then
    echo "📦 Installing Hugging Face CLI..."
    uv tool install huggingface-hub
else
    echo "✅ Hugging Face CLI is already installed"
fi

# wandb (via uv tool)
if ! command -v wandb >/dev/null 2>&1; then
    echo "📦 Installing wandb..."
    uv tool install wandb
else
    echo "✅ wandb is already installed"
fi

# Ensure Node.js is installed (required for npm packages)
if ! command -v node >/dev/null 2>&1; then
    echo "📦 Installing Node.js..."
    brew install node
fi

# Claude Code (via npm)
if ! command -v claude >/dev/null 2>&1; then
    echo "📦 Installing Claude Code..."
    npm install -g @anthropic-ai/claude-code
else
    echo "✅ Claude Code is already installed"
fi

# OpenAI Codex (via npm)
if ! command -v codex >/dev/null 2>&1; then
    echo "📦 Installing OpenAI Codex..."
    npm install -g @openai/codex
else
    echo "✅ OpenAI Codex is already installed"
fi

echo ""
echo "🔐 Authentication Setup"
echo "======================="
echo "Run these commands to authenticate:"
echo "  gh auth login                             # GitHub"
echo "  hf auth login                             # Hugging Face"
echo "  wandb login                               # Weights & Biases"
echo ""

{{ end -}}
